# NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=
# CLERK_SECRET_KEY=

# NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
# NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
# NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
# NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

# This was inserted by `prisma init`:
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

DATABASE_URL="postgresql://arkodeepc:t5zaMREkdD4zKHin29os@ai-companion-1.clmqwkyy200y.us-east-1.rds.amazonaws.com:5432"

SMTP = smtp.gmail.com
EMAIL = arkodeep3404@gmail.com
PASS = skzp cnhy uymx yuik
JWT_SECRET = myoromclub

# NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=

# PINECONE_INDEX=
# PINECONE_ENV=
# PINECONE_API_KEY=

# UPSTASH_REDIS_REST_URL=
# UPSTASH_REDIS_REST_TOKEN=

# STRIPE_API_KEY=
# STRIPE_WEBHOOK_SECRET=

# NEXT_PUBLIC_APP_URL=

ENV = DEV

AWS_REGION = us-east-1
AWS_CLOUDFRONT_BASE_URL = https://d1ppppl30oeslu.cloudfront.net

AWS_S3_BUCKET_NAME = ai-companion-saas
AWS_S3_ACCESS_KEY_ID = AKIAWHFTYO763GBEUUBW
AWS_S3_SECRET_ACCESS_KEY = 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

AWS_DYNAMO_DB_ACCESS_KEY_ID = AKIAWHFTYO767QBZPSGJ
AWS_DYNAMO_DB_SECRET_ACCESS_KEY = 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
AWS_DYNAMO_DB_TABLE_NAME = langchain
AWS_DYNAMO_DB_TABLE_PARTITION_KEY = id

#OPENAI_API_KEY = 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 
#OPENAI_API_KEY = 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

AZURE_OPENAI_API_INSTANCE_NAME = openai-azure-testing-1
AZURE_OPENAI_API_DEPLOYMENT_NAME = gpt-4o-mini
AZURE_OPENAI_API_KEY = eaf63f2b32134b69aeac8eb8fac226d1
AZURE_OPENAI_API_VERSION = 2024-02-01

#__NEXT_PRIVATE_PREBUNDLED_REACT = next

# await new Promise((resolve) => setTimeout(resolve, 2000))
